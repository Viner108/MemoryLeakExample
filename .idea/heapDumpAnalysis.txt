Пример: создан класс Data с полем ввиде массива байт. В классе MemoryLeakExample в методе main создается ArrayList и в бесконечном цикле в ArrayList добавляются экземпляры класса Data.
1.Запускаем приложение в VisualVM в дебаге.
2.Выбираем вкладку монитор и наблюдаем насколько стремительно растет занимаемая память(User heap)
3.Нажимаем на кнопке Heap Dump и переходим в открывшуюся вкладку.
4.На верхней панели выбираем эконку Classes и сортируем по размеру классов.
5.На первой строчке будет класс, который занимает больше всего места. В нашем случае это byte[].
6.Нажимаем на эту строчке и на верхней панели выбираем значок GC Root.
7.В открывшейся вкладке нажимаем на кнопку Compute Merged GC Roots.
8.Показывается список всех мест, которые ссылаются на класс, который мы выбрали.
9.Этот спиок тоже отсортировать и получить на верхней строчке тот класс который имеет больше всего ссылок на ранее выбранный класс. В нашем случае это ArrayList#4.
10.Во вкладке Heap Dump на верхней панели выбираем значок Instance и в низу поле Class Filter вводим класс, который мы узнали в прошлом пункте.
11.В отсортированном списке находим наш класс и выбираем его.
12.Повторяем пункты 6 и 7 для этого класса. В нашем случае получилось <node is GC root>. Это значит, что на это класс никто не ссылается, и он просто лежит в памяти.


